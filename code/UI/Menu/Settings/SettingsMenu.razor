@using System.Linq;
@using Sandbox;
@using Sandbox.UI;
@using Sandbox.MenuSystem;
@using Sandbox.UI.GameMenu
@using Amper.FPS;

@page "/settings"
@namespace TFS2.Menu
@attribute [StyleSheet]
@inherits Panel

<root>
    <div class="container">
        <image class="logotype" />

        <div class="block">
            <text class="header">#GameSettings.Title.Settings</text>
            <div class="content">
                <button class="button-gradient" onclick=@SelectInput>#GameSettings.Inputs</button>
                <button class="button-gradient" onclick=@SelectClientSettings>#GameSettings.ClientSettings</button>
            </div>
        </div>
    </div>

    <div class="settings">
        @if(Mode == SettingsPage.Client)
        {
            <label class="title">#GameSettings.ClientSettings</label>
            <div class="body">
			    <ObjectEditor class="editor" @ref=Editor/>
            </div>
        }
        else
        {
            <label class="title">#GameSettings.Inputs</label>
            <div class="body">
			    @foreach ( var group in Game.Menu.InputSettings.Actions.GroupBy( x => x.GroupName ) )
                {
                    <div class="group">
                        <text class="header">@group.Key</text>
                        @foreach ( InputAction action in group )
                        {
                            <div class="item">
                                <label>@action.Name</label>
                                <KeyBind Game="@Game.Menu" Action=@action class="button-dark"></KeyBind>
                            </div>
                        }
                    </div>
                }
            </div>
        }
    </div>

    <div class="footer">
        <button class="button-dark" icon="highlight_off" onclick=@OnClickClose>#Generic.Back</button>
        <button class="button-dark" icon="highlight_off" onclick=@SetDefaults>#GameSettings.Reset</button>

        <text class="playername">@Game.UserName</text>
        <image style="background-image: url( avatar:@Game.SteamId )" class="playeravatar" />
    </div>
</root>

@code {
    enum SettingsPage
    {
        Inputs,
        Client
    }

    public ObjectEditor Editor;
    SettingsPage Mode;
    bool needsRefresh = false;

    public SettingsMenu()
    {
        BindClass("ingame", () => Game.InGame);
    }

    protected override void OnAfterTreeRender(bool firstTime)
    {
        if ( Editor != null && needsRefresh )
        {
            needsRefresh = false;
            Editor.SetTarget( TFClientSettings.Current );
        }
    }

    public void SetDefaults()
    {
        TFClientSettings.Reset();

        Editor.SetTarget( TFClientSettings.Current );
    }

    public void OnClickClose()
    {
        this.Navigate("/");
    }

    protected override void OnEvent( PanelEvent e )
    {
        base.OnEvent( e );

        if ( e.Name == "save" )
        {
            TFClientSettings.Current.Save();
        }
    }

    private void SelectInput()
    {
        Mode = SettingsPage.Inputs;
        needsRefresh = true;
    }

    private void SelectClientSettings()
    {
        Mode = SettingsPage.Client;
    }
}
