@using System;
@using Sandbox;
@using Sandbox.UI;
@inherits Panel;
@namespace TFS2.Menu
@attribute [StyleSheet]

@if (Setting == null)
	return;

@if(string.IsNullOrEmpty(Value))
    return;

<root class="control">

	@switch (Setting.DisplayType)
	{
		case GameSetting.GameSettingType.Choice:
						
			<DropDown value=@Value @ref=Editor ValueChanged=@Set></DropDown>
			break;

		case GameSetting.GameSettingType.Boolean:

            <checkbox @ref=Editor value=@Value />
			break;

		case GameSetting.GameSettingType.Integer:

			<SliderControl @ref=Editor ShowTextEntry="@false" ShowRange="@true" Step=@(1.0f) Min=@Setting.Minimum Max=@Setting.Maximum value=@Value OnValueChanged=@( ( float f ) => Set( f.ToString() ))></SliderControl>
			break;

		case GameSetting.GameSettingType.Float:

			<SliderControl @ref=Editor ShowTextEntry="@false" ShowRange="@true" Step=@Setting.Step Min=@Setting.Minimum Max=@Setting.Maximum value=@Value OnValueChanged=@( ( float f ) => Set( f.ToString() ))></SliderControl>
			break;

		case GameSetting.GameSettingType.String:
						
			<TextEntry @ref=Editor value=@Value OnTextEdited=@Set></TextEntry>
			break;

		default:

			<div>Unhandled LobbyGameSetting @Setting.DisplayType</div>
			break;	
	}

</root>


@code
{
    public Action<string, string> OnChange { get; set; }

    public string Value { get; set; }
    public GameSetting Setting { get; set; }

    Panel Editor;

    void Set( string newvalue)
    {
        OnChange?.Invoke( Setting.ConVarName, newvalue );
    }

    protected override void OnAfterTreeRender(bool firstTime)
    {
        base.OnAfterTreeRender(firstTime);

        if (Editor is DropDown ChoiceDropdown)
        {
            ChoiceDropdown.Options.Clear();

            foreach (var choice in Setting.Choices )
            {
                ChoiceDropdown.Options.Add(new(choice.Name, choice.Value));
            }

            ChoiceDropdown.Value = Value;
        }
        else if(Editor is Checkbox BoolCheckbox)
        {
            BoolCheckbox.Checked = bool.Parse(Value);
            BoolCheckbox.ValueChanged += OnChecked;
        }
        else if(Editor is SliderControl NumberSlider)
        {
            NumberSlider.Value = float.Parse(Value);
        }
    }

    void OnChecked(bool c)
    {
        Set(c ? "true" : "false");
    }
}
